# PRODUCT_NAME - Basename of the executable or bundle being built
# RESOURCES - Resources to embed
# LOCALIZED_RESOURCES - Resources to embed per language

BUNDLE_SUFFIX = .app
BUNDLE_NAME?= $(PRODUCT_NAME)$(BUNDLE_SUFFIX)
EXECUTABLES_PATH = $(BUNDLE_NAME)/Contents/MacOS
RESOURCES_PATH = $(BUNDLE_NAME)/Contents/Resources
LOCALIZED_RESOURCES_PATH = $(RESOURCES_PATH)/en.lproj

all: app-bundle

.PHONY: bundle-skeleton
bundle-skeleton: $(BUNDLE_NAME)

$(BUNDLE_NAME):
	@echo Creating $(BUNDLE_NAME)
	mkdir -p $(BUNDLE_NAME)/Contents
	mkdir -p $(EXECUTABLES_PATH)
	mkdir -p $(RESOURCES_PATH)
	mkdir -p $(LOCALIZED_RESOURCES_PATH)

INFO_PLIST?= Resources/$(PRODUCT_NAME)-Info.plist
INFO_PLIST_FLAGS = 

.PHONY: info-plist
info-plist: bundle-skeleton $(BUNDLE_NAME)/Contents/Info.plist
INFO_PLIST_FLAGS = $(DEFINES:%=-D%) -DEXECUTABLE_NAME=$(EXECUTABLE_NAME) \
	-DMACOSX_DEPLOYMENT_TARGET=$(MACOSX_VERSION_MIN) -DPRODUCT_NAME=$(PRODUCT_NAME) \
	-DPRODUCT_IDENTIFIER=$(shell echo $(PRODUCT_NAME) | tr ' _' '-')

$(BUNDLE_NAME)/Contents/Info.plist: $(INFO_PLIST)
	@echo "Preprocessing $@"
	cpp -P $(INFO_PLIST_FLAGS) $< $@

IBTOOL = ibtool
IBTOOL_FLAGS = --errors --warnings --output-format human-readable-text
INSTALLED_NIB_FILES = $(patsubst %,$(LOCALIZED_RESOURCES_PATH)/%,$(notdir $(NIB_FILES:%.xib=%.nib)))

.PHONY: nib-files
nib-files: bundle-skeleton $(INSTALLED_NIB_FILES)
$(LOCALIZED_RESOURCES_PATH)/%.nib: %.xib
	@echo "Compiling (XIB) $@"
	$(IBTOOL) $(IBTOOL_FLAGS) --compile $@ $<

.PHONY: resources
resources: $(RESOURCES)
	$(RSYNC) --out-format="Copying Resource %n" $(RSYNC_FLAGS) $^ $(RESOURCES_PATH)/

.PHONY: localized-resources
localized-resources: $(LOCALIZED_RESOURCES)
	$(RSYNC) --out-format="Copying Resource (Localized) %n" $(RSYNC_FLAGS) $^ $(LOCALIZED_RESOURCES_PATH)/

.PHONY: app-bundle
app-bundle: bundle-skeleton resources localized-resources info-plist nib-files $(EXECUTABLE_PATH)

FRAMEWORKS?= AppKit
LDLIBS+= $(FRAMEWORKS:%=-framework %)

LDFLAGS?= -ObjC

include Base.gmake

$(EXECUTABLE_PATH): $(OBJECTS)
	@echo "Linking $@"
	$(CC) $(CFLAGS) $(LDFLAGS) -o $@ $^ $(LDLIBS)

.PHONY: clean
clean:
	@echo "Cleaning (App Bundle)
	rm -rf $(BUNDLE_NAME)

.PHONY: debug
debug: app-bundle
	gdb -q $(EXECUTABLE_PATH)

.PHONY: run
run: app-bundle
	$(EXECUTABLE_PATH)
